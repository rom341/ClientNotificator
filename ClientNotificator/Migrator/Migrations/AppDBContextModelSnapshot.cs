// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migrator.DataAccess;

#nullable disable

namespace Migrator.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ClientService", b =>
                {
                    b.Property<int>("ClientsID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceListID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientsID", "ServiceListID");

                    b.HasIndex("ServiceListID");

                    b.ToTable("ClientService");
                });

            modelBuilder.Entity("Migrator.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastEdit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextVisitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitHistory")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Migrator.Models.ClientContacts", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TelegramID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelegramName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("ClientContacts");
                });

            modelBuilder.Entity("Migrator.Models.ClientPersonalInfo", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ClientPersonalInfo");
                });

            modelBuilder.Entity("Migrator.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("ClientService", b =>
                {
                    b.HasOne("Migrator.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Migrator.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServiceListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Migrator.Models.ClientContacts", b =>
                {
                    b.HasOne("Migrator.Models.Client", "Client")
                        .WithOne("Contacts")
                        .HasForeignKey("Migrator.Models.ClientContacts", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Migrator.Models.ClientPersonalInfo", b =>
                {
                    b.HasOne("Migrator.Models.Client", "Client")
                        .WithOne("PersonalInfo")
                        .HasForeignKey("Migrator.Models.ClientPersonalInfo", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Migrator.Models.Client", b =>
                {
                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("PersonalInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
